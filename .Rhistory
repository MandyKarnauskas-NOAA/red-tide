ylab = "number of interviewees", xlab = "")
axis(2, las=2)
abline(h=0)
b <- barplot(tab, beside = T, col= 2:5,
args.legend = list(x = "topleft", bty = "n", title = "home location of interviewee"),
names.arg = labs, las = 2,
legend.text = rownames(tab), axes = F,
ylab = "number of interviewees", xlab = "")
axis(2, las=2)
abline(h=0)
b <- barplot(tab, beside = T, col= 2:5,
args.legend = list(x = "topleft", bty = "n", title = "home location of interviewee"),
names.arg = labs, las = 1,
legend.text = rownames(tab), axes = F,
ylab = "number of interviewees\ndescribing event", xlab = "")
axis(2, las=2)
abline(h=0)
par(mar=c(3,4,1,0.5))
b <- barplot(tab, beside = T, col= 2:5,
args.legend = list(x = "topleft", bty = "n", title = "home location of interviewee"),
names.arg = labs, las = 1,
legend.text = rownames(tab), axes = F,
ylab = "number of interviewees\ndescribing event", xlab = "")
axis(2, las=2)
abline(h=0)
d$event
################################################################################
############  M. Karnauskas May 2019                                ############
############  code for compiling red tide oral history information  ############
############  produces outputs for SEDAR 61 working paper           ############
# todo:   NA
rm(list=ls())
setwd("C:/Users/mandy.karnauskas/Desktop/RT_severity")
# import data -------------
d <- read.table("RT_Summary_Spreadsheet_June2020.csv", header=T, skip=0, sep=",", quote="\"", stringsAsFactors = F)
head(d)
names(d)
d$Community[which(d$Community == "Evergaldes City")] <- "Everglades City"  # fix spelling
# cut out notes columns and check input -------------------------
d <- d[1:19]
head(d)
names(d)
table(d$SEFSC.or.SERO, useNA="always")
table(d$Interview.Number, useNA="always")
length(unique(d$Interview.Number))                    # number of interviews == 62
table(d$Interview.ID, useNA="always")
length(table(d$Interview.ID))
table(d$Interviewee, useNA="always")
table(d$Date.Of.Interview, useNA="always")
# table(d$RT.Event.Period, useNA="always")
table(d$Year, useNA="always")
table(d$Community, useNA="always")
table(d$Offshore.or.Inshore., useNA="always")
table(d$Area.Fished, useNA="always")
table(d$SCALE, useNA="always")
table(d$Temporal.Extent, useNA="always")
table(d$Spatial.Extent.of.Red.Tide, useNA="always")
table(d$Map.Legend, useNA="always")
table(d$Areas.Fished.that.are.not.affected.by.RT, useNA="always")
table(d$Species.Targeted, useNA="always")
table(d$Species.Affected, useNA="always")
table(d$Species.NOT.affected, useNA="always")
table(d$Recovery.Time_Months, useNA="always")
# extract date of interview info -------------------------
d$Date.Of.Interview <- as.character((d$Date.Of.Interview))
for (i in 1:nrow(d)) {
if (nchar(d$Date.Of.Interview[i])==7) { d$Date.Of.Interview[i] <- paste0(0, d$Date.Of.Interview[i]) }
}
sort(strptime(d$Date.Of.Interview, format="%m%d%Y")) # interviews from Nov 2018 to Dec 2019
# calculate number of interviews per community
tab <- table(d$Interview.ID, d$Community)
tab[which(tab>0)] <- 1
data.frame(colSums(tab))
# define counties --------------------------------------
d$County <- NA
d$County[which(d$Community %in% c("Clearwater", "Madeira Beach", "St. Petersberg", "Tarpon Springs"))]<- "Pinellas"
d$County[which(d$Community %in% c("Boca Grande", "Cape Haze", "Placida"))]                            <- "Charlotte"
d$County[which(d$Community %in% c("Chokoloskee",  "Everglades City", "Goodland", "Naples"))]          <- "Collier"
d$County[which(d$Community %in% c("Cortez"))]                                                         <- "Manatee"
d$County[which(d$Community %in% c("Fort Myers Beach", "Pine Island", "Plantation Island"))]           <- "Lee"
d$County[which(d$Community %in% c("Panama City"))]                                                    <- "Bay"
d$County[which(d$Community %in% c("Sarasota"))]                                                       <- "Sarasota"
d$County[which(d$Community %in% c("Steinhatchee"))]                                                   <- "Taylor"
table(d$Community, d$County)
which(rowSums(table(d$Community, d$County))==0)  # check for zeros
d$County <- factor(d$County, levels = c("Collier", "Lee", "Charlotte", "Sarasota", "Manatee", "Pinellas", "Taylor", "Bay"))
d$County
table(d$County, useNA = "always")
d$region <- NA
d$region[which(d$County %in% c("Collier", "Lee", "Charlotte"))]     <- "SW FL"
d$region[which(d$County %in% c("Sarasota", "Manatee", "Pinellas"))] <- "W Central FL"
d$region[which(d$County %in% c("Taylor"))]                          <- "Big Bend"
d$region[which(d$County %in% c("Bay"))]                             <- "Panhandle"
d$region <- factor(d$region, levels = c("SW FL", "W Central FL", "Big Bend" , "Panhandle"))
d$region
table(d$region, d$County)
table(d$region, useNA = "always")
# convert scale to numerical ranking for plotting ---------------
table(d$SCALE, useNA="always")
nrank <- 3
table(d$SCALE, d$Year)
d$rat <- nrank + 1 - as.numeric(as.factor(d$SCALE))
table(d$SCALE, d$rat)
table(d$rat, d$Year)
# condense events into major red tide periods --------------------
table(d$Year)
yr <- as.character(round(d$Year))
levels(yr) <- as.character(1930:2020)
plot(table(yr), las=2)                # look for event periods
plot(table(yr), las=2, xlim=c(1960, 2019), ylab = "number of mentions")
table(yr)
which(table(yr) > 1)                  # 2 or more mentions
which(table(yr) > 2)                  # 3 or more mentions
which(table(yr) > 9)
# method 2: analyze only years with 10 or more obs
d$event <- NA
# method 3: analyze only years with 10 or more obs but include margin of error +/- 1 year
lis1 <- lis + 1
lis2 <- lis - 1
d$event[which(yr %in% lis1)] <- as.numeric(yr[which(yr %in% lis1)]) - 1
# method 2: analyze only years with 10 or more obs
d$event <- NA
lis <- as.numeric(names(which(table(yr) > 9)))  # create list of year-specific events only
d$event[which(yr %in% lis)] <- yr[which(yr %in% lis)]
################################################################################
############  M. Karnauskas May 2019                                ############
############  code for compiling red tide oral history information  ############
############  produces outputs for SEDAR 61 working paper           ############
# todo:   NA
rm(list=ls())
setwd("C:/Users/mandy.karnauskas/Desktop/RT_severity")
# import data -------------
d <- read.table("RT_Summary_Spreadsheet_June2020.csv", header=T, skip=0, sep=",", quote="\"", stringsAsFactors = F)
head(d)
names(d)
d$Community[which(d$Community == "Evergaldes City")] <- "Everglades City"  # fix spelling
# cut out notes columns and check input -------------------------
d <- d[1:19]
head(d)
names(d)
table(d$SEFSC.or.SERO, useNA="always")
table(d$Interview.Number, useNA="always")
length(unique(d$Interview.Number))                    # number of interviews == 62
table(d$Interview.ID, useNA="always")
length(table(d$Interview.ID))
table(d$Interviewee, useNA="always")
table(d$Date.Of.Interview, useNA="always")
# table(d$RT.Event.Period, useNA="always")
table(d$Year, useNA="always")
table(d$Community, useNA="always")
table(d$Offshore.or.Inshore., useNA="always")
table(d$Area.Fished, useNA="always")
table(d$SCALE, useNA="always")
table(d$Temporal.Extent, useNA="always")
table(d$Spatial.Extent.of.Red.Tide, useNA="always")
table(d$Map.Legend, useNA="always")
table(d$Areas.Fished.that.are.not.affected.by.RT, useNA="always")
table(d$Species.Targeted, useNA="always")
table(d$Species.Affected, useNA="always")
table(d$Species.NOT.affected, useNA="always")
table(d$Recovery.Time_Months, useNA="always")
# extract date of interview info -------------------------
d$Date.Of.Interview <- as.character((d$Date.Of.Interview))
for (i in 1:nrow(d)) {
if (nchar(d$Date.Of.Interview[i])==7) { d$Date.Of.Interview[i] <- paste0(0, d$Date.Of.Interview[i]) }
}
sort(strptime(d$Date.Of.Interview, format="%m%d%Y")) # interviews from Nov 2018 to Dec 2019
# calculate number of interviews per community
tab <- table(d$Interview.ID, d$Community)
tab[which(tab>0)] <- 1
data.frame(colSums(tab))
# define counties --------------------------------------
d$County <- NA
d$County[which(d$Community %in% c("Clearwater", "Madeira Beach", "St. Petersberg", "Tarpon Springs"))]<- "Pinellas"
d$County[which(d$Community %in% c("Boca Grande", "Cape Haze", "Placida"))]                            <- "Charlotte"
d$County[which(d$Community %in% c("Chokoloskee",  "Everglades City", "Goodland", "Naples"))]          <- "Collier"
d$County[which(d$Community %in% c("Cortez"))]                                                         <- "Manatee"
d$County[which(d$Community %in% c("Fort Myers Beach", "Pine Island", "Plantation Island"))]           <- "Lee"
d$County[which(d$Community %in% c("Panama City"))]                                                    <- "Bay"
d$County[which(d$Community %in% c("Sarasota"))]                                                       <- "Sarasota"
d$County[which(d$Community %in% c("Steinhatchee"))]                                                   <- "Taylor"
table(d$Community, d$County)
which(rowSums(table(d$Community, d$County))==0)  # check for zeros
d$County <- factor(d$County, levels = c("Collier", "Lee", "Charlotte", "Sarasota", "Manatee", "Pinellas", "Taylor", "Bay"))
d$County
table(d$County, useNA = "always")
d$region <- NA
d$region[which(d$County %in% c("Collier", "Lee", "Charlotte"))]     <- "SW FL"
d$region[which(d$County %in% c("Sarasota", "Manatee", "Pinellas"))] <- "W Central FL"
d$region[which(d$County %in% c("Taylor"))]                          <- "Big Bend"
d$region[which(d$County %in% c("Bay"))]                             <- "Panhandle"
d$region <- factor(d$region, levels = c("SW FL", "W Central FL", "Big Bend" , "Panhandle"))
d$region
table(d$region, d$County)
table(d$region, useNA = "always")
# convert scale to numerical ranking for plotting ---------------
table(d$SCALE, useNA="always")
nrank <- 3
table(d$SCALE, d$Year)
d$rat <- nrank + 1 - as.numeric(as.factor(d$SCALE))
table(d$SCALE, d$rat)
table(d$rat, d$Year)
# condense events into major red tide periods --------------------
table(d$Year)
yr <- as.character(round(d$Year))
levels(yr) <- as.character(1930:2020)
plot(table(yr), las=2)                # look for event periods
plot(table(yr), las=2, xlim=c(1960, 2019), ylab = "number of mentions")
table(yr)
which(table(yr) > 1)                  # 2 or more mentions
which(table(yr) > 2)                  # 3 or more mentions
which(table(yr) > 9)
# decide how to split up - different methods for this
# method 1: all years of data
# brks <- c(1930, 1950, seq(1960, 1990, 10), 2000, 2003, 2006, 2011, 2015, 2016, 2020)
# d$event <- cut(d$Year, br
############  produces outputs for SEDAR 61 working paper           ############
# todo:   NA
rm(list=ls())
setwd("C:/Users/mandy.karnauskas/Desktop/RT_severity")
# import data -------------
d <- read.table("RT_Summary_Spreadsheet_June2020.csv", header=T, skip=0, sep=",", quote="\"", stringsAsFactors = F)
head(d)
names(d)
d$Community[which(d$Community == "Evergaldes City")] <- "Everglades City"  # fix spelling
# cut out notes columns and check input -------------------------
d <- d[1:19]
head(d)
names(d)
table(d$SEFSC.or.SERO, useNA="always")
table(d$Interview.Number, useNA="always")
length(unique(d$Interview.Number))                    # number of interviews == 62
table(d$Interview.ID, useNA="always")
length(table(d$Interview.ID))
table(d$Interviewee, useNA="always")
table(d$Date.Of.Interview, useNA="always")
# table(d$RT.Event.Period, useNA="always")
table(d$Year, useNA="always")
table(d$Community, useNA="always")
table(d$Offshore.or.Inshore., useNA="always")
table(d$Area.Fished, useNA="always")
table(d$SCALE, useNA="always")
table(d$Temporal.Extent, useNA="always")
table(d$Spatial.Extent.of.Red.Tide, useNA="always")
table(d$Map.Legend, useNA="always")
table(d$Areas.Fished.that.are.not.affected.by.RT, useNA="always")
table(d$Species.Targeted, useNA="always")
table(d$Species.Affected, useNA="always")
table(d$Species.NOT.affected, useNA="always")
table(d$Recovery.Time_Months, useNA="always")
# extract date of interview info -------------------------
d$Date.Of.Interview <- as.character((d$Date.Of.Interview))
for (i in 1:nrow(d)) {
if (nchar(d$Date.Of.Interview[i])==7) { d$Date.Of.Interview[i] <- paste0(0, d$Date.Of.Interview[i]) }
}
sort(strptime(d$Date.Of.Interview, format="%m%d%Y")) # interviews from Nov 2018 to Dec 2019
# calculate number of interviews per community
tab <- table(d$Interview.ID, d$Community)
tab[which(tab>0)] <- 1
data.frame(colSums(tab))
# define counties --------------------------------------
d$County <- NA
d$County[which(d$Community %in% c("Clearwater", "Madeira Beach", "St. Petersberg", "Tarpon Springs"))]<- "Pinellas"
d$County[which(d$Community %in% c("Boca Grande", "Cape Haze", "Placida"))]                            <- "Charlotte"
d$County[which(d$Community %in% c("Chokoloskee",  "Everglades City", "Goodland", "Naples"))]          <- "Collier"
d$County[which(d$Community %in% c("Cortez"))]                                                         <- "Manatee"
d$County[which(d$Community %in% c("Fort Myers Beach", "Pine Island", "Plantation Island"))]           <- "Lee"
d$County[which(d$Community %in% c("Panama City"))]                                                    <- "Bay"
d$County[which(d$Community %in% c("Sarasota"))]                                                       <- "Sarasota"
d$County[which(d$Community %in% c("Steinhatchee"))]                                                   <- "Taylor"
table(d$Community, d$County)
which(rowSums(table(d$Community, d$County))==0)  # check for zeros
d$County <- factor(d$County, levels = c("Collier", "Lee", "Charlotte", "Sarasota", "Manatee", "Pinellas", "Taylor", "Bay"))
d$County
table(d$County, useNA = "always")
d$region <- NA
d$region[which(d$County %in% c("Collier", "Lee", "Charlotte"))]     <- "SW FL"
d$region[which(d$County %in% c("Sarasota", "Manatee", "Pinellas"))] <- "W Central FL"
d$region[which(d$County %in% c("Taylor"))]                          <- "Big Bend"
d$region[which(d$County %in% c("Bay"))]                             <- "Panhandle"
d$region <- factor(d$region, levels = c("SW FL", "W Central FL", "Big Bend" , "Panhandle"))
d$region
table(d$region, d$County)
table(d$region, useNA = "always")
# convert scale to numerical ranking for plotting ---------------
table(d$SCALE, useNA="always")
nrank <- 3
table(d$SCALE, d$Year)
d$rat <- nrank + 1 - as.numeric(as.factor(d$SCALE))
table(d$SCALE, d$rat)
table(d$rat, d$Year)
# condense events into major red tide periods --------------------
table(d$Year)
yr <- as.character(round(d$Year))
levels(yr) <- as.character(1930:2020)
plot(table(yr), las=2)                # look for event periods
plot(table(yr), las=2, xlim=c(1960, 2019), ylab = "number of mentions")
table(yr)
which(table(yr) > 1)                  # 2 or more mentions
which(table(yr) > 2)                  # 3 or more mentions
which(table(yr) > 9)
# method 2: analyze only years with 10 or more obs
d$event <- NA
lis <- as.numeric(names(which(table(yr) > 9)))  # create list of year-specific events only
# method 3: analyze only years with 10 or more obs but include margin of error +/- 1 year
lis1 <- lis + 1
lis2 <- lis - 1
# method 2: analyze only years with 10 or more obs
d$event <- NA
lis <- as.numeric(names(which(table(yr) > 9)))  # create list of year-specific events only
d$event[which(yr %in% lis)] <- yr[which(yr %in% lis)]
# method 3: analyze only years with 10 or more obs but include margin of error +/- 1 year
lis1 <- lis + 1
lis2 <- lis - 1
d$event[which(yr %in% lis1)] <- as.numeric(yr[which(yr %in% lis1)]) - 1
d$event[which(yr %in% lis2)] <- as.numeric(yr[which(yr %in% lis2)]) + 1
table(d$event, useNA = "always")
d$Year[which(is.na(d$event))]             # check NAs
table(d$event, d$Year)                    # check results
par(mar=c(5,4,2,1))
plot(d$Year, d$rat, col="#FF000050",
pch = as.numeric(d$region)+1, cex = 2,
xlab = "year", ylab = "event severity rating", axes = F, ylim = c(0.8, 3.2))
axis(1)
axis(2, at = 1:3, lab = c("minor", "major", "extreme"))
box()
legend("topleft", names(table(d$region)), pt.cex=2, col="#FF000060", pch=2:5)
dev.off()
# longevity of event -------------------------------------
d$tim <- as.numeric(as.character(d$Temporal.Extent.Months))  # converts descriptions to NAs - warning OK
cbind(d$tim, d$Temporal.Extent.Months)                       # check
tapply(d$tim, d$event, mean, na.rm=T)
tapply(d$tim, d$event, sd, na.rm=T)
max(d$tim, na.rm=T)                           # max y-axis
min(d$Year[which(!is.na(d$tim))], na.rm = T)  # min x-axis
par(mar=c(5,4,2,1))
plot(d$Year, d$tim, col = "#FF000070",
pch = as.numeric(d$region)+1, cex = 2, xlim = c(1955, 2020), ylim = c(0, 20),
xlab = "year", ylab = "temporal extent of event (months)", axes = F)
axis(1); axis(2, las=2); box()
legend("topleft", names(table(d$region)), pt.cex=2, col="#FF000070", pch=2:5)
dev.off()
###########################   recovery after event   ###########################
d$recov <- as.numeric(as.character(d$Recovery.Time_Months))
d$Recovery.Time_Months[grep("recover", d$Recovery.Time_Months)]   # check to see that all of these are "still recovering" or "not yet recovered"
d$recov[grep("recover", d$Recovery.Time_Months)] <- 70
data.frame(d$Recovery.Time_Months, d$recov)                       # check conversion
par(mar=c(5,5,1,1))
plot(d$Year, d$recov, col="#FF000070",
pch = as.numeric(d$region)+1, cex = 2, xlab = "year", ylab = "recovery time (years)         ",
axes=F, ylim=c(0,75))
axis(1, at=seq(1940, 2020,10))
axis(2, las=2, at=seq(0, 60, 12), lab=0:5)
axis(2, at=70, lab="still \nrecovering", las=2)
legend(1937, 60, names(table(d$region)), pt.cex=2, col="#FF000070", pch=2:5)
dev.off()
d$SCALE[which(d$SCALE == "Devastating")] <- "Extreme"
d$SCALE <- factor(d$SCALE, levels = c("Minor", "Major", "Extreme"))
tab <- table(d$event, d$SCALE); tab
tab1 <- tab / rowSums(tab)
tab
tab1
# labels ---------
labs <- NA
st <- substr(rownames(tab), 2, 5)
en <- substr(rownames(tab), 7, 10)
l1 <- which((as.numeric(en) - as.numeric(st)) == 10)
labs[l1] <- paste0(st[l1], "s")
l2 <- which((as.numeric(en) - as.numeric(st)) != 10)
labs[l2] <- paste0(as.numeric(st[l2])+1, "-", en[l2])
l3 <- which((as.numeric(en) - as.numeric(st)) == 1)
labs[l3] <- paste0(en[l3])
labs
if (is.na(labs))  { labs <- rownames(tab) }
labs
cols <- c("#FF000015", "#FF000050", "#FF000095")
par(mar=c(5,4,1,0.5))
b <- barplot(t(tab1), beside = F, col = cols, ylim = c(0, 1.35), axes = F,
names.arg = labs, las = 1, ylab="proportion of ratings                ",
args.legend = list(x = "top", col = cols, horiz = T),
legend.text = c("minor", "major", "extreme"))
mtext(side = 1, line = 3, "red tide event")
tail(table(d$event, d$SCALE))  # check that legend is correct
axis(2, at = seq(0,1, 0.2), lab = seq(0,1, 0.2), las = 2)
text(b, 1.1, paste0(rowSums(tab)), las=2)
#text(b, 1.1, paste0("n=", rowSums(tab)), las=2)
abline(h = 0)
dev.off()
tab <- table(d$County, d$SCALE)
tab1 <- tab / rowSums(tab)
tab
tab1
chisq.test(tab)
chisq.test(tab1)
par(mar=c(5,4,1,0.5))
b <- barplot(t(tab1), beside = F, col = cols, ylim = c(0, 1.3), axes = F,
args.legend=list(x = "top", horiz=T), legend.text = colnames(tab),
ylab="proportion of ratings                    ",
xlab="home county of interviewee")
axis(2, at = seq(0,1, 0.2), lab = seq(0,1, 0.2), las = 2)
abline(h=0)
text(b, 1.05, paste("n =", rowSums(tab)))
dev.off()
d$zone <- d$Offshore.or.Inshore.
table(d$Offshore.or.Inshore., d$zone)          # check reclassification
tab <- table(d$zone, d$SCALE)
tab <- tab[c(2, 4, 1),]
tab1 <- tab / rowSums(tab)
tab
tab1
par(mar=c(5,4,1,0.5))
b <- barplot(t(tab1), beside = F, col = cols, ylim = c(0, 1.3), axes = F,
args.legend=list(x = "top", horiz=T), legend.text = colnames(tab1),
ylab="proportion of ratings", xlab="zone of fishing")
axis(2, at = seq(0,1, 0.2), lab = seq(0,1, 0.2), las = 2)
text(b, 1.05, paste("n =", rowSums(tab)))
abline(h=0)
dev.off()
tab <- table(d$region, d$event)
tab
par(mar=c(3,4,1,0.5))
b <- barplot(tab, beside = T, col= 2:5,
args.legend = list(x = "topleft", bty = "n", title = "home location of interviewee"),
names.arg = labs, las = 1,
legend.text = rownames(tab), axes = F,
ylab = "number of interviewees\ndescribing event", xlab = "")
axis(2, las=2)
abline(h=0)
dev.off()
par(mar=c(3,4,1,0.5))
b <- barplot(tab, beside = T, col= 2:5,
args.legend = list(x = "topleft", bty = "n", title = "home location of interviewee"),
names.arg = labs, las = 1,
legend.text = rownames(tab), axes = F,
ylab = "number of interviewees\ndescribing event", xlab = "")
axis(2, las=2)
abline(h=0)
rm(list=ls())
d <- read.delim("C:/Users/mandy.karnauskas/Desktop/us-counties.csv", header=T, sep=",")
d1 <- d[which(d$fips==12086),] # miami
d2 <- d[which(d$fips==17097),] # lake
d3 <- d[which(d$fips==55133),] # waukesha
plot(d1$date, d1$cases)
points(d2$date, d2$cases, col=2)
points(d3$date, d3$cases, col=3)
d1$newcases <- c(0, d1$cases[2:nrow(d1)] - d1$cases[1:(nrow(d1)-1)])
d1$newcasegrwth <- c(0, d1$newcases[2:nrow(d1)] - d1$newcases[1:(nrow(d1)-1)])
MoveAve <- function(x, width) {
as.vector(filter(x, rep(1/width, width), sides=2)) }
diff(as.Date(d1$date))
mean(diff(as.Date(d1$date)))
d1$dat2 <- format(as.Date(d1$date), "%b %d")
d1$doy <- 1:nrow(d1)
d1$drate <- d1$deaths / d1$cases * 10000
yl <- MoveAve(d1$newcases, 7)
yl[2:120]- yl[1:119]
plot(yl[2:120]- yl[1:119])
plot(d1$doy[2:120], (yl[2:120]- yl[1:119]), type="l")
abline(h=0)
# -- plot --
par(mar=c(6,5,3,5))
plot(d1$doy, d1$newcases, axes=F, las=2, ylab="new cases per day", xlab="",
pch=20, ylim=c(0,4200),
main="Analysis of NY Times COVID database for Miami-Dade County")
lines(d1$doy, d1$newcases)
axis(1, at=d1$doy, lab=d1$dat2, las=2)
axis(2, las=2); box()
mtext(side=4, "death rate (%)", line=2)
p <- 1500
v1 <- which(d1$dat2=="Mar 24")
abline(v=v1, col=8, lwd=3)
abline(v=v1+14, col=gray(0.8), lwd=3)
arrows(v1, p-300, v1+14, p-300, length=0.1, col=gray(0.4))
arrows(v1+14, p-300, v1, p-300, length=0.1, col=gray(0.4))
text(v1+7, p, "14 days\n(incubation\nperiod)", col=gray(0.4), cex=0.8)
text(v1, p, "Miami\nshelter-\nin-place\norder",
col=gray(0.4), pos=2)
#v1 <- which(d1$dat2=="Apr 17")
#text(v1, 50, "LIBERATE\ntweets", col=gray(0.4), pos=2)
#abline(v=v1, col=8, lwd=3)
#v1 <- which(d1$dat2=="May 03")
#abline(v=v1, col=8, lwd=3)
#abline(v=v1+6, col=8, lwd=3)
#arrows(v1, 550, v1+6, 550, length=0.1, col=gray(0.4))
#arrows(v1+6.5, 550, v1, 550, length=0.1, col=gray(0.4))
#text(v1, 550, "Protesters gather in Miami,\ndeclare stay-at-home \norders are 'tyranny'", col=gray(0.4), pos=2)
#text(v1+3, 600, "6 days\n(average\nincubation\nperiod)", col=gray(0.4), cex=0.8)
v1 <- which(d1$dat2=="Jun 01")
abline(v=v1, col=8, lwd=3)
abline(v=v1+14, col=gray(0.8), lwd=3)
arrows(v1, p-300, v1+14, p-300, length=0.1, col=gray(0.4))
arrows(v1+14, p-300, v1, p-300, length=0.1, col=gray(0.4))
text(v1+7,p, "14 days\n(incubation\nperiod)", col=gray(0.4), cex=0.8)
text(v1, p, "Miami \nreopens \n businesses", col=gray(0.4), pos=2)
p <- p + 2600
v1 <- which(d1$dat2=="Jul 03")
abline(v=v1, col=8, lwd=3)
abline(v=v1+14, col=gray(0.8), lwd=3)
arrows(v1, p-300, v1+14, p-300, length=0.1, col=gray(0.4))
arrows(v1+14, p-300, v1, p-300, length=0.1, col=gray(0.4))
text(v1+7,p, "14 days\n(incubation\nperiod)", col=gray(0.4), cex=0.8)
text(v1, p, "\n\n\nEmergency\nOrder 26-20\n(close indoor\nfacilities)", col=gray(0.4), pos=2)
#v1 <- which(d1$dat2=="Jul 07")
#abline(v=v1, col=8, lwd=3, lty=3)
#text(v1, p, "\n\n\n\nEmergency\nOrder 26-20\n(close indoor\ndining)", col=gray(0.4), pos=4)
lines(d1$doy, yl, col=2, lwd=3)
lines(d1$doy, d1$drate*10, col=4, lwd=2)
axis(4, at=seq(0,4000,1000), lab=seq(0,4,1), las=2)
legend("topleft", bg="white", c("new cases per day", "7-day moving average", "death rate"), col=c(1,2,4), lwd=c(1,3,2), pch=20, pt.cex = c(1,0,0))
2000*10
2000*10*30
2000*10*30/3000000
